/*--------------------------------------------------------------------------#
#  Jenkins running on remote EC2 AWS instance, remote webserver too         #
#  Need to install ssh plugins                                              #
#  Edit jenkins configuration to add remote server and ssh key              #
#  Its better to set "/" directory and define declaratively                 #
#  Create new pipeline, choose SCM using https                              #
#  Configure 1 slave (ubuntu), add ssh keys                                 #
#  Install jenkins plugins "Docker Pipeline" and "Amazon ECR"               #
#  Create DockerHub token, add creds to Jenkins
#                                                                           #
#  Select "Script path" in git repo jenkins/docker_php_deploy/Jenkinsfile   #
#                                                                           #
#  Last update:        01.06.2023                                           #
#--------------------------------------------------------------------------*/
pipeline {
    agent { label 'slave-1' }
    environment {
        CI_IMAGE_NAME = 'web_container'
        CI_CONTAINER_NAME = 'test_container'
        CONTAINER_EXTERNAL_PORT = '8080'

        CD_IMAGE_REPO_USER = 'wood8'
        CD_IMAGE_REPO_NAME = 'jenkins-webserver'
    }

    options {
        skipDefaultCheckout()
        timestamps()
    }

    stages {
        stage('Delete workspace before build starts') {
            steps {
                echo 'Deleting workspace dir'
                deleteDir()
            }
        }

        // Без этого степа создаются директории но не скачиваются файлы
        stage('Checkout git') {
            steps {
                script {
                    git(
                        url: 'https://github.com/gitwood8/jenkins-deploy-webapp.git',
                        branch: 'main'
                    )
                    env.GIT_COMMIT = sh(returnStdout: true, script: 'git rev-parse --short=5 HEAD').trim()
                }
            }
        }

        stage('User input') {
            steps {
                myvar1 = userInput['param1']
                echo 'myvar1'
            }
        }

        stage('Build image') {
            steps {
                script {
                    dir('jenkins/docker_php_deploy/docker/') {
                        docker.build("${CD_IMAGE_REPO_USER}/${CD_IMAGE_REPO_NAME}:${env.GIT_COMMIT}")
                    }
                }
            }
        }

        stage('Test run container') {
            steps {
                script {
                    def dockerImage = docker.image("${CD_IMAGE_REPO_USER}/${CD_IMAGE_REPO_NAME}:${env.GIT_COMMIT}")
                    dockerImage.run("-d --rm --name ${env.CI_CONTAINER_NAME} -p ${env.CONTAINER_EXTERNAL_PORT}:80")
                    sleep 20
                    sh "docker inspect --format='{{json .State.Health}}' \$(docker ps -q) | grep '\"Status\":\"healthy\"'"
                    sleep 20
                    dockerImage.stop()
                    sh 'docker images -qa | xargs docker rmi 2>/dev/null --force || true'
                    sh 'if [ \$(docker images -qa | wc -l) = "0" ]; then echo "Success"; else echo "Vse ploho"; fi'
                }
            }
        }

        // docker url: ~$docker info
        stage('Push image to DockerHub') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'dockerhub-cred-jenkins-wood8', url: 'https://index.docker.io/v1/') {
                        docker.image("${CD_IMAGE_REPO_USER}/${CD_IMAGE_REPO_NAME}:${GIT_COMMIT}").push()
                    }
                }
            }
        }
    }
}
