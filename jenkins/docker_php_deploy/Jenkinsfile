/*--------------------------------------------------------------------------#
#  Jenkins running on remote EC2 AWS instance, remote webserver too         #
#  Need to install ssh plugins                                              #
#  Edit jenkins configuration to add remote server and ssh key              #
#  Its better to set "/" directory and define declaratively                 #
#  Create new pipeline, choose SCM using https                              #
#                                                                           #
#  Select "Script path" in git repo /jenkins/docker_php_deploy/Jenkinsfile  #
#                                                                           #
#  Update date:        31.05.2023                                           #
#--------------------------------------------------------------------------*/
pipeline {
    agent any
    environment {
        CI_IMAGE_NAME = 'web_container',
        CI_CONTAINER_NAME = 'test_container',
        CONTAINER_EXTERNAL_PORT = '8080',
        CD_IMAGE_REPO_USER = 'wood8',
        CD_IMAGE_NAME_VERSION = 'jenkins-cicd'
    }

    options {
        skipDefaultCheckout()
        timestamps()
    }

    stages {
        stage('Checkout') {
            steps {
                git(
                    url: 'https://github.com/gitwood8/jenkins-deploy-webpage.git',
                    branch: 'main'
                )
            }
        }

        stage('Build') {
            steps {
                script {
                    sh "docker build -t env.CI_IMAGE_NAME"
                    sh "docker run -d --name env.CI_CONTAINER_NAME -p env.CONTAINER_EXTERNAL_PORT:80 env.CI_IMAGE_NAME"
                    sh "sleep 15"
                    /* groovylint-disable-next-line LineLength */
                    sh "docker inspect --format='{{json .State.Health}}' $(docker ps -q) | grep '\"Status\":\"healthy\"'"
                }
            }
        }

        stage('Test') {
            steps {
                sh '''
                    echo '------Test Started------'
                    result=$(grep "Hello" index.html | wc -l)
                    echo $result
                    if [ "$result" = "1" ]; then
                        echo "Test passed"
                    else
                        echo "Test failed"
                        exit 1
                    fi
                    echo '------Test Finished------'
                '''
            }
        }

//        stage('Transfer files') {
//            steps {
//                echo '------Starting publish over SSH------'
//                sshPublisher(
//                    publishers: [
//                        sshPublisherDesc(
//                            configName: 'awsaws',
//                            transfers: [
//                                sshTransfer(
//                                    flatten: false,
//                                    remoteDirectory: '/var/www/html',
//                                    sourceFiles: 'index.html'
//                                    )
//                                ]
//                            )
//                        ]
//                    )
//                echo '------Finished publish over SSH------'
//            }
//        }
//
//        stage('Restart webserver') {
//            steps {
//                echo '------Restart webserver------'
//                sshPublisher(
//                    //continueOnError: true,
//                    //failOnError: true,
//                    publishers: [
//                        sshPublisherDesc(
//                            configName: 'awsaws',
//                            transfers: [
//                                sshTransfer(
//                                    execCommand: 'sudo systemctl restart httpd'
//                                )
//                            ]
//                        )
//                    ]
//                )
//                echo '------Webserver restarted------'
//            }
//        }
    }
}
