/*--------------------------------------------------------------------------#
#  Jenkins running on remote EC2 AWS instance, remote webserver too         #
#  Need to install ssh plugins                                              #
#  Edit jenkins configuration to add remote server and ssh key              #
#  Its better to set "/" directory and define declaratively                 #
#  Create new pipeline, choose SCM using https                              #
#  Configure 1 slave (ubuntu), add ssh keys                                 #
#  Install jenkins plugins "Docker Pipeline" and "Amazon ECR"               #
#  Create DockerHub token, add creds to Jenkins
#                                                                           #
#  Select "Script path" in git repo jenkins/docker_php_deploy/Jenkinsfile   #
#                                                                           #
#  Last update:        01.06.2023                                           #
#--------------------------------------------------------------------------*/
pipeline {
    agent { label 'slave-1' }
    environment {
        CI_IMAGE_NAME = 'web_container'
        CI_CONTAINER_NAME = 'test_container'
        CONTAINER_EXTERNAL_PORT = '8080'

        CD_IMAGE_REPO_USER = 'wood8'
        CD_IMAGE_REPO_NAME = 'jenkins-webserver'
    }

    options {
        skipDefaultCheckout()
        timestamps()
    }

    stages {
        stage('Delete workspace before build starts') {
            steps {
                echo 'Deleting workspace dir'
                deleteDir()
            }
        }

        // Без этого степа создаются директории но не скачиваются файлы
        stage('Checkout git') {
            steps {
                script {
                    git(
                        url: 'https://github.com/gitwood8/jenkins-deploy-webapp.git',
                        branch: 'main'
                    )
                    env.GIT_COMMIT = sh(returnStdout: true, script: 'git rev-parse --short=5 HEAD').trim()
                }
            }
        }

        stage('Build docker image') {
            steps {
                dir('jenkins/docker_php_deploy/docker/') {
                    //def MY_GIT_COMMIT = sh(returnStdout: true, script: 'git rev-parse --short=6 HEAD').trim()
                    sh "docker build -t ${CD_IMAGE_REPO_USER}/${CD_IMAGE_REPO_NAME}:${env.GIT_COMMIT} ."
                }
            }
        }
        // docker url: ~$docker info
        stage('Push image') {
            steps {
                script {
                    withDockerRegistry( credentialsId: 'dockerhub-cred-jenkins-wood8', url: 'https://index.docker.io/v1/' ) {
                        dockerImage.push()
                    }
                }
            }
        }
    }
}

/*

!!!разобрать пример!!!ф:

stage('Building image NGINX') {
  steps{
    script {
      dockerImageNginx = docker.build registrynginx + ":$BUILD_NUMBER", "-f dockerfilenginx ."  
    }
  }
}
stage('Push Image to registry') {
  steps{
    script{
      withDockerRegistry(credentialsId: 'gcr:xxxxx', url: 'http://eu.gcr.io/xxxx/') {
        dockerImageNginx.push()
      }
    }
  }
} 
*/